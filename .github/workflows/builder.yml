name: builder

on: push

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      - 
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx (base-papermc)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f common/papermc/base.Dockerfile -t jcxldn/minecraft-runner:base-papermc .
      -
        name: Run Buildx (paper)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f paper/Dockerfile -t jcxldn/minecraft-runner:paper .
      -
        name: Run Buildx (waterfall)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f waterfall/Dockerfile -t jcxldn/minecraft-runner:waterfall .
  # ALPINE
  alpine:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      - 
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        # linux/armhf is disabled.
        # causes error: "/opt/java/openjdk/jmods: Value too large for defined data type"
        # possibly due to a 32-bit limitation? more research required.
        # https://github.com/Prouser123/minecraft-runner-docker/runs/762200598
        name: Run Buildx (base-papermc-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f common/papermc/base.alpine.Dockerfile -t jcxldn/minecraft-runner:base-papermc-alpine .
      -
        name: Run Buildx (paper-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f paper/alpine.Dockerfile -t jcxldn/minecraft-runner:paper-alpine .
      -
        name: Run Buildx (waterfall-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f waterfall/alpine.Dockerfile -t jcxldn/minecraft-runner:waterfall-alpine .
      -
        name: Run Buildx (geyser-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f geyser/alpine.Dockerfile -t jcxldn/minecraft-runner:geyser-alpine .
