#!/bin/sh
# ------------------------------
# PaperMC auto-updater
#
# /runner/entrypoint
# ------------------------------

# default auto-updating JAR path.
JAR_PATH="/runner/app.jar"

JVM_OPTS="$@ $JVM_OPTS "

echo "entrypoint > Found JVM Options: '$JVM_OPTS'"
echo "entrypoint > Found Application Options: '$APP_OPTS'"

echo "entrypoint > Welcome! using product: $PRODUCT"

echo "entrypoint > Checking if OVERRIDE_JAR_PATH env variable was set..."

if [ -n "$OVERRIDE_JAR_PATH" ];
then
	# Variable was set, skip the download and pass the variable to the runner.
	echo "entrypoint > OVERRIDE_JAR_PATH found! ('${OVERRIDE_JAR_PATH}') Starting..."
	JAR_PATH=$OVERRIDE_JAR_PATH
	# source runner to pass through env vars
	. /runner/runner
else
	echo "entrypoint > Checking if the OVERRIDE_VERSION env variable was set..."

	if [ -z ${OVERRIDE_VERSION+x} ];
	then
		# Variable is not set.
		echo "entrypoint > Variable not set, querying for latest supported minecraft version..."
		LATEST_MC=$(wget -q -O- https://papermc.io/api/v1/$PRODUCT | jq ".versions[0]" | sed 's/"//g')
		echo "entrypoint > Found version $LATEST_MC! Downloading latest build..."
	else
		# Variable is set.
		echo "entrypoint > Override Variable set! Using overridden version $OVERRIDE_VERSION"
		LATEST_MC=$OVERRIDE_VERSION
	fi
	
	echo "entrypoint > Checking if the OVERRIDE_JAR_DL_PATH env variable was set..."
	
	if [ -z ${OVERRIDE_JAR_DL_PATH+x} ];
	then
		# Variable is not set
		echo "entrypoint > Variable not set, using default ($JAR_PATH)..."
	else
		# Variable is set.
		echo "entrypoint > Override Variable set! Using overriden JAR download path '$OVERRIDE_JAR_DL_PATH'"
		JAR_PATH=$OVERRIDE_JAR_DL_PATH	
	fi
	
	wget -q -O $JAR_PATH https://papermc.io/api/v1/$PRODUCT/$LATEST_MC/latest/download

	if [ $? -eq 0 ]; then
		echo "entrypoint > Successfully downloaded! Starting..."
		echo ""
		# source runner to pass through env vars
		. /runner/runner
	else
		echo "entrypoint > Failed to download $PRODUCT. Exiting..."
		exit 1
	fi
fi
